{
  "name": "tana-import-tools",
  "version": "1.0.0",
  "main": "dist/index.js",
  "type": "module",
  "engines": {
    "node": "18"
  },
  "typings": "dist/index.d.ts",
  "files": [
    "dist",
    "src"
  ],
  "license": "MIT",
  "scripts": {
    "ci": "yarn lint && yarn test",
    "format": "prettier --write \"src/**/*.ts\"",
    "lint": "eslint --ext .ts src/",
    "prepare": "rm -rf dist/ && ./node_modules/.bin/tsc  --project tsconfig.build.json",
    "build": "yarn prepare",
    "convert:roam": "yarn build && node --experimental-modules --es-module-specifier-resolution=node dist/runner.js roam",
    "convert:workflowy": "yarn build && node --experimental-modules --es-module-specifier-resolution=node dist/runner.js workflowy",
    "convert:logseq": "yarn build && node --experimental-modules --es-module-specifier-resolution=node dist/runner.js logseq",
    "test": "jest"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.18.6",
    "@babel/preset-typescript": "^7.18.6",
    "@jest/globals": "^29.6.2",
    "@types/jest": "^29.5.3",
    "@types/node": "^20.4.9",
    "@typescript-eslint/eslint-plugin": "^6.3.0",
    "@typescript-eslint/parser": "^6.3.0",
    "eslint": "^8.21.0",
    "jest": "^29.6.2",
    "prettier": "^3.0.1",
    "typescript": "^5.1.6"
  },
  "eslintConfig": {
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "plugins": [],
    "rules": {
      "curly": [
        "error",
        "all"
      ],
      "no-shadow": "off",
      "@typescript-eslint/no-shadow": [
        "error"
      ],
      "prefer-const": [
        "error",
        {
          "destructuring": "any",
          "ignoreReadBeforeAssign": false
        }
      ]
    },
    "overrides": [
      {
        "files": [
          "**/*.test.ts"
        ],
        "rules": {
          "@typescript-eslint/no-unused-expressions": "off",
          "@typescript-eslint/no-non-null-assertion": "off"
        }
      }
    ]
  },
  "jest": {
    "testMatch": [
      "**/?(*.)+(test).[t]s?(x)"
    ]
  }
}
